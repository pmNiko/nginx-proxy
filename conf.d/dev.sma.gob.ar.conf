# Upstream definitions
upstream app_backend {
    server app:80;
}

upstream api_backend {
    server api:4101;
}

server {
    listen 80;
    server_name dev.sma.gob.ar;

    # Configuraci√≥n de logs espec√≠ficos
    access_log /var/log/nginx/dev.sma.gob.ar.access.log;
    error_log /var/log/nginx/dev.sma.gob.ar.error.log;

    # Configuraciones de seguridad b√°sicas
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # DNS resolver para Docker
    resolver 127.0.0.11 ipv6=off;

    # üñ• App principal
    location / {
        set $upstream_app http://app:80;
        
        proxy_pass $upstream_app;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 2s;
        proxy_read_timeout 3s;
        
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }

    # üîÅ API (puede fallar)
    location = /api {
        return 301 /api/;
    }

    location ~ ^/api/(.*)$ {
        set $upstream_api http://api:4101;
        
        proxy_pass $upstream_api/api/v1/appsmagob/$1;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 2s;
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;
        proxy_next_upstream error timeout http_502 http_504;
        
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }

    # üöß Fallback para mantenimiento (esto es lo que faltaba!)
    location @fallback {
        root /usr/share/nginx/html;
        try_files /maintenance/index.html =503;
        
        add_header Content-Type text/html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Headers de mantenimiento
        add_header Retry-After "30";
        add_header X-Maintenance-Mode "true";
    }

    # üìÅ Archivos est√°ticos de mantenimiento
    location /maintenance/ {
        root /usr/share/nginx/html;
        try_files $uri $uri/ =404;
        
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # üìÅ Assets de fallback
    location /imgs/ {
        alias /usr/share/nginx/html/maintenance/;
        try_files $uri $uri/ =404;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}